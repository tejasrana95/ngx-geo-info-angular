{"version":3,"file":"ngx-geo-info-angular.js","sourceRoot":"","sources":["../../src/ngx-geo-info-angular.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n\nexport class NgxGeoCoordinatesInfo {\n    gotdevice: any = {};\n\n\n    public constructor() {\n\n    }\n\n    getCurrentLocation(options: any): Promise<any> {\n        return new Promise((resolve: any, reject: any) => {\n            navigator.geolocation.getCurrentPosition(resolve, ({ code, message }) =>\n                reject(Object.assign(new Error(message), { name: \"PositionError\", code })),\n                options);\n        });\n    }\n    get(type: string): Promise<any> {\n        return new Promise((resolve: any, reject: any) => {\n            this.getCurrentLocation({}).then(value => {\n                const returnResponse: CoodinatesResponse = new CoodinatesResponse({});\n                returnResponse.status = 'success';\n                returnResponse.message = '';\n                if (type === 'timestamp') {\n                    returnResponse.data = value['timestamp'];\n                } else {\n                    returnResponse.data = value['coords'][type];\n                }\n                resolve(returnResponse);\n            }, (err) => {\n                const returnResponse: CoodinatesResponse = new CoodinatesResponse({});\n                returnResponse.status = 'error';\n                returnResponse.message = err.message;\n                returnResponse.data = '';\n                reject(returnResponse);\n            });\n        });\n\n    }\n\n    getAll(): Promise<any> {\n        return new Promise((resolve: any, reject: any) => {\n            this.getCurrentLocation({}).then(value => {\n                const returnResponse: AllCoodinatesResponse = new AllCoodinatesResponse({});\n                returnResponse.status = 'success';\n                returnResponse.message = '';\n                returnResponse.data.timestamp = value['timestamp'];\n                returnResponse.data = value['coords'];\n                resolve(returnResponse);\n            }, (err) => {\n                const returnResponse: AllCoodinatesResponse = new AllCoodinatesResponse({});\n                returnResponse.status = 'error';\n                returnResponse.message = err.message;\n                returnResponse.data.accuracy = 0;\n                returnResponse.data.altitude = 0;\n                returnResponse.data.altitudeAccuracy = 0;\n                returnResponse.data.heading = '0';\n                returnResponse.data.latitude = 0;\n                returnResponse.data.longitude = 0;\n                returnResponse.data.speed = 0;\n                returnResponse.data.timestamp = '0';\n                reject(returnResponse);\n            });\n        });\n\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nexport class CoodinatesResponse {\n    status: string;\n    message: string;\n    data: any;\n\n    constructor(data: any) {\n        this.status = data.status || '';\n        this.message = data.message || '';\n        this.data = data.data || '';\n    }\n}\nexport class AllCoodinatesResponse {\n    status: string;\n    message: string;\n    data: GeoCoodination;\n\n    constructor(data: any) {\n        this.status = data.status || '';\n        this.message = data.message || '';\n        this.data = data.data || new GeoCoodination({});\n    }\n}\nexport class GeoCoodination {\n    accuracy: number;\n    altitude: number;\n    altitudeAccuracy: number;\n    heading: string;\n    latitude: number;\n    longitude: number;\n    speed: number;\n    timestamp: string;\n    constructor(data: any) {\n        this.accuracy = data.accuracy || '';\n        this.altitude = data.altitude || '';\n        this.altitudeAccuracy = data.altitudeAccuracy || '';\n        this.heading = data.heading || '';\n        this.latitude = data.latitude || '';\n        this.longitude = data.longitude || '';\n        this.speed = data.speed || '';\n        this.timestamp = data.timestamp || '';\n\n    }\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}