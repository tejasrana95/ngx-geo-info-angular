{"version":3,"file":"ngx-geo-info-angular.js","sourceRoot":"","sources":["../../src/ngx-geo-info-angular.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class NgxGeoCoordinatesInfo {\r\n    gotdevice: any = {};\r\n\r\n\r\n    public constructor() {\r\n\r\n    }\r\n\r\n    getCurrentLocation(options: any): Promise<any> {\r\n        return new Promise((resolve: any, reject: any) => {\r\n            navigator.geolocation.getCurrentPosition(resolve, ({ code, message }) =>\r\n                reject(Object.assign(new Error(message), { name: \"PositionError\", code })),\r\n                options);\r\n        });\r\n    }\r\n    get(type: string): Promise<any> {\r\n        return new Promise((resolve: any, reject: any) => {\r\n            this.getCurrentLocation({}).then(value => {\r\n                const returnResponse: CoodinatesResponse = new CoodinatesResponse({});\r\n                returnResponse.status = 'success';\r\n                returnResponse.message = '';\r\n                if (type === 'timestamp') {\r\n                    returnResponse.data = value['timestamp'];\r\n                } else {\r\n                    returnResponse.data = value['coords'][type];\r\n                }\r\n                resolve(returnResponse);\r\n            }, (err) => {\r\n                const returnResponse: CoodinatesResponse = new CoodinatesResponse({});\r\n                returnResponse.status = 'error';\r\n                returnResponse.message = err.message;\r\n                returnResponse.data = '';\r\n                reject(returnResponse);\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    getAll(): Promise<any> {\r\n        return new Promise((resolve: any, reject: any) => {\r\n            this.getCurrentLocation({}).then(value => {\r\n                const returnResponse: AllCoodinatesResponse = new AllCoodinatesResponse({});\r\n                returnResponse.status = 'success';\r\n                returnResponse.message = '';\r\n                returnResponse.data.timestamp = value['timestamp'];\r\n                returnResponse.data = value['coords'];\r\n                resolve(returnResponse);\r\n            }, (err) => {\r\n                const returnResponse: AllCoodinatesResponse = new AllCoodinatesResponse({});\r\n                returnResponse.status = 'error';\r\n                returnResponse.message = err.message;\r\n                returnResponse.data.accuracy = 0;\r\n                returnResponse.data.altitude = 0;\r\n                returnResponse.data.altitudeAccuracy = 0;\r\n                returnResponse.data.heading = '0';\r\n                returnResponse.data.latitude = 0;\r\n                returnResponse.data.longitude = 0;\r\n                returnResponse.data.speed = 0;\r\n                returnResponse.data.timestamp = '0';\r\n                reject(returnResponse);\r\n            });\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport class CoodinatesResponse {\r\n    status: string;\r\n    message: string;\r\n    data: any;\r\n\r\n    constructor(data: any) {\r\n        this.status = data.status || '';\r\n        this.message = data.message || '';\r\n        this.data = data.data || '';\r\n    }\r\n}\r\nexport class AllCoodinatesResponse {\r\n    status: string;\r\n    message: string;\r\n    data: GeoCoodination;\r\n\r\n    constructor(data: any) {\r\n        this.status = data.status || '';\r\n        this.message = data.message || '';\r\n        this.data = data.data || new GeoCoodination({});\r\n    }\r\n}\r\nexport class GeoCoodination {\r\n    accuracy: number;\r\n    altitude: number;\r\n    altitudeAccuracy: number;\r\n    heading: string;\r\n    latitude: number;\r\n    longitude: number;\r\n    speed: number;\r\n    timestamp: string;\r\n    constructor(data: any) {\r\n        this.accuracy = data.accuracy || '';\r\n        this.altitude = data.altitude || '';\r\n        this.altitudeAccuracy = data.altitudeAccuracy || '';\r\n        this.heading = data.heading || '';\r\n        this.latitude = data.latitude || '';\r\n        this.longitude = data.longitude || '';\r\n        this.speed = data.speed || '';\r\n        this.timestamp = data.timestamp || '';\r\n\r\n    }\r\n}"]}